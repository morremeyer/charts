# -- The repository location
repo: ~
pvc: ~

# -- The secret that all containers load their environment from. See https://restic.readthedocs.io/en/latest/040_backup.html#environment-variables for variables.
secretName: "backup-secret"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

backupJob:
  # -- Additional environment values to load. Only applies to the backup container, not the init containers that initializes the restic repository. Has to match the pod.spec.containers.env spec.
  env: []

  # -- when to run backups
  schedule: "17 3 * * *"

  # -- concurrencyPolicy for the backup Jobs
  concurrencyPolicy: Forbid

  # -- restartPolicy for the backup Jobs
  restartPolicy: OnFailure

  nodeSelector: {}

  tolerations: []

  # -- labels of a pod that a strict affinity for scheduling will be set to. Needed for `ReadWriteOnce` PVCs.
  affinityLabels: {}

  # -- to specify a full `spec.affinity` map for a pod. In most cases, `backupJob.affinityLabels` will be sufficient.
  affinity: {}

  securityContext: {}

  # -- successfulJobsHistoryLimit for the backup Jobs
  successfulJobsHistoryLimit: 3

  # -- failedJobsHistoryLimit for the backup Jobs
  failedJobsHistoryLimit: 1

  # -- Additional volumes to add to the pod, e.g. to backup hostPaths.
  additionalVolumes: []

  backup:
    image:
      repository: restic/restic
      pullPolicy: IfNotPresent
      tag: 0.13.1

    # -- command for the backup. Defaults to '/usr/bin/restic' by the upstream container.
    command: ~

    # -- arguments for the backup. **Automatically generated, only set when necessary**
    args: []

    # -- resources for the backup container
    resources: {}

    # -- Additional volumes to mount to the restic container, e.g. to backup hostPaths.
    additionalVolumeMounts: []

  # -- Configuration for the repository init container
  init:
    image:
      repository: restic/restic
      pullPolicy: IfNotPresent
      tag: 0.13.1

    # -- resources for the init container
    resources: {}

cleanupJob:
  # -- If backups shall be cleaned up after some time
  enabled: true

  # -- when to run the cleanup
  schedule: "17 15 * * *"

  # -- number of daily snapshots to keep
  keepDaily: 8

  # -- number of weekly snapshots to keep
  keepWeekly: 5

  # -- number of monthly snapshots to keep
  keepMonthly: 13

  # -- number of yearly snapshots to keep
  keepYearly: 2

  # -- concurrencyPolicy for the cleanup Jobs
  concurrencyPolicy: Forbid

  # -- restartPolicy for the cleanup Jobs
  restartPolicy: OnFailure

  image:
    repository: restic/restic
    pullPolicy: IfNotPresent
    tag: 0.13.1

  # -- command for the cleanup. Defaults to '/usr/bin/restic' by the upstream container.
  command: ~

  # -- arguments for the cleanup. **Automatically generated, only set when necessary**
  args: []

  # -- resources for the cleanup container
  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  securityContext: {}

  # -- successfulJobsHistoryLimit for the cleanup Jobs
  successfulJobsHistoryLimit: 3

  # -- failedJobsHistoryLimit for the cleanup Jobs
  failedJobsHistoryLimit: 1
