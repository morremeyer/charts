# -- Set to true to create a CronJob instead of a Deployment
isCronjob: false

# -- The number of successful finished jobs to retain.
successfulJobsHistoryLimit: ~

# -- The number of failed finished jobs to retain.
failedJobsHistoryLimit: ~

# -- schedule for the cronjob. Only used if `isCronjob` is `true`.
schedule: "17 3 * * *"

# -- number of replicas
replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: "1.21.6"

restartPolicy: Always

initContainers: []

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true

  # -- Annotations to add to the service account
  annotations: {}

  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template.
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

command: ~

args: ~

# -- Directly set environment variables
env: []

# -- Set environment variables from configMaps or Secrets
envValueFrom: {}

additionalVolumeMounts: []

additionalVolumes: []

labels: {}

annotations: {}

persistence:
  enabled: false
  # -- Where the persistent volume is mounted
  mountPoint: /data
  storage: 100Mi
  # -- Set a storageClassName, otherwise the default class is used.
  storageClassName: ~

ports:
  - name: http
    containerPort: 80
    protocol: TCP

livenessProbe:
  httpGet:
    path: /
    port: http

readinessProbe:
  httpGet:
    path: /
    port: http

service:
  type: ClusterIP
  targetPort: http
  protocol: TCP
  name: http
  port: 80

  # Only for type ClusterIP
  ip: ~

ingress:
  ## -- Enable or disable this Ingress
  enabled: false

  # -- The ingressClassName for this Ingress resource
  className: ~
  annotations: {}

  hosts:
    - host: chart-example.local
      paths:
        - path: /
          backend:
            serviceName: chart-example.local
            servicePort: 80
  tls: []

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
